{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/map/map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nimport { getCrashes } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"70vh\",\n  width: \"50vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 28,\n  lng: -84\n};\nexport default function Map() {\n  _s();\n\n  const [values, setValues] = useState({\n    crashList: [],\n    markers: [],\n    error: \"\"\n  });\n  const {\n    crashList,\n    error,\n    markers\n  } = values;\n\n  const init = () => {\n    getCrashes().then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: data.error\n        });\n      } else {\n        data.forEach(d => {\n          markers.push({\n            report_number: d.report_number,\n            latitude: d.latitude,\n            longitude: d.longitude\n          });\n        });\n        setValues({ ...values,\n          markers: markers,\n          crashList: data\n        });\n        console.log(markers);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries\n  });\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 7.2,\n      center: center,\n      options: options,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"hi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: Number(marker.latitude),\n            lng: Number(marker.longtitude)\n          },\n          icon: {\n            url: \"./warning.png\"\n          }\n        }, marker.report_number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"CcHZa5Y2YbpNGR0TMv9gCV/8aA8=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/map/map.js"],"names":["React","useState","useEffect","GoogleMap","useLoadScript","Marker","mapStyles","getCrashes","require","config","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","Map","values","setValues","crashList","markers","error","init","then","data","forEach","d","push","report_number","latitude","longitude","console","log","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","map","marker","Number","longtitude","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n} from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nimport { getCrashes } from \"../api/api\";\nrequire('dotenv').config();\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"70vh\",\n  width: \"50vw\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: 28,\n  lng: -84,\n};\n\nexport default function Map() {\n  const [values, setValues] = useState({\n    crashList: [],\n    markers: [],\n    error: \"\",\n  });\n  const { crashList, error, markers } = values;\n\n  const init = () => {\n    getCrashes().then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        data.forEach(d => {\n          markers.push({\n            report_number: d.report_number,\n            latitude: d.latitude,\n            longitude: d.longitude\n          })\n        })\n        setValues({\n          ...values,\n          markers: markers,\n          crashList: data\n        });\n        console.log(markers);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries,\n  });\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={7.2}\n        center={center}\n        options={options}\n      >\n        {markers.map((marker) => (\n          <div>\n            <div>hi</div>\n            <Marker\n            key={marker.report_number}\n            position={{ lat: Number(marker.latitude), lng: Number(marker.longtitude) }}\n            icon={{\n              url: \"./warning.png\"\n            }}\n          />\n          </div>\n          \n        ))}\n      </GoogleMap>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}