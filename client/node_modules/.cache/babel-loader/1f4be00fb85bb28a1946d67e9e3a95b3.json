{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Badge, Container, Row, ListGroup, Tabs, Sonnet } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport \"./crash-card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrashCard({\n  crash\n}) {\n  _s();\n\n  const [vehicleDetail, setVehicleDetail] = useState([]);\n\n  const init = () => {\n    getVehiclesByReportNumber(crash.report_number).then(vehiclesData => {\n      if (vehiclesData) {\n        vehiclesData.forEach(v => {\n          v.color = colorMap(v.color);\n\n          if (v) {\n            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n              let temp = {\n                drivers: driverData\n              };\n              setVehicleDetail(vehicleDetail => [...vehicleDetail, { ...v,\n                ...temp\n              }]);\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const colorMap = color => {\n    switch (color) {\n      case \"WHT\":\n        return \"White\";\n\n      case \"BLU\":\n        return \"Blue\";\n\n      case \"BLK\":\n        return \"White\";\n\n      case \"GRN\":\n        return \"Blue\";\n\n      case \"SIL\":\n        return \"White\";\n\n      default:\n        return \"Red\";\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"danger\",\n            className: \"float-right\",\n            children: crash.crash_severity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [crash.on_street, \" @ \", crash.city, \", \", crash.county]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"profile\",\n        id: \"uncontrolled-tab-example\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"home\",\n          title: \"Home\",\n          children: /*#__PURE__*/_jsxDEV(Sonnet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"profile\",\n          title: \"Profile\",\n          children: /*#__PURE__*/_jsxDEV(Sonnet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          eventKey: \"contact\",\n          title: \"Contact\",\n          disabled: true,\n          children: /*#__PURE__*/_jsxDEV(Sonnet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: vehicleDetail.map(vehicle => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        children: [vehicle.drivers.map(driver => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [driver.injury_severity, \" \", driver.age, \" \", driver.sex]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [vehicle.traveling_on_street, \" \", vehicle.traveling_direction, \" \", vehicle.maneuver]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [vehicle.color, \" \", vehicle.year, \" \", vehicle.make, \" \", vehicle.model]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrashCard, \"PEvZFG2vhXame44jSbVvvxAAtas=\");\n\n_c = CrashCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrashCard\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js"],"names":["React","useState","useEffect","Card","Badge","Container","Row","ListGroup","Tabs","Sonnet","getVehiclesByReportNumber","getDriversByVehicleNumber","CrashCard","crash","vehicleDetail","setVehicleDetail","init","report_number","then","vehiclesData","forEach","v","color","colorMap","vehicle_number","driverData","temp","drivers","crash_severity","on_street","city","county","map","vehicle","driver","injury_severity","age","sex","traveling_on_street","traveling_direction","maneuver","year","make","model"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Badge, Container, Row, ListGroup, Tabs, Sonnet } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport \"./crash-card.css\";\n\nexport default function CrashCard({ crash }) {\n    const [vehicleDetail, setVehicleDetail] = useState([]);\n\n    const init = () => {\n        getVehiclesByReportNumber(crash.report_number)\n            .then(vehiclesData => {\n                if (vehiclesData) {\n                    vehiclesData.forEach(v => {\n                        v.color = colorMap(v.color);\n                        if (v) {\n                            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n                                let temp = {\n                                    drivers: driverData\n                                };\n                                setVehicleDetail(vehicleDetail => [...vehicleDetail, { ...v, ...temp }]);\n                            })\n                        }\n                    })\n                }\n            });\n    };\n\n    const colorMap = (color) => {\n        switch (color) {\n            case \"WHT\":\n                return \"White\";\n            case \"BLU\":\n                return \"Blue\";\n            case \"BLK\":\n                return \"White\";\n            case \"GRN\":\n                return \"Blue\";\n            case \"SIL\":\n                return \"White\";\n            default:\n                return \"Red\";\n        }\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card>\n            <Card.Header>\n                <Container>\n                    <Row>\n                        <Badge variant=\"danger\" className=\"float-right\">{crash.crash_severity}</Badge>\n                    </Row>\n                    <Row>\n                        {crash.on_street} @ {crash.city}, {crash.county}\n                    </Row>\n                </Container>\n            </Card.Header>\n\n            <Card.Body>\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n  <Tab eventKey=\"home\" title=\"Home\">\n    <Sonnet />\n  </Tab>\n  <Tab eventKey=\"profile\" title=\"Profile\">\n    <Sonnet />\n  </Tab>\n  <Tab eventKey=\"contact\" title=\"Contact\" disabled>\n    <Sonnet />\n  </Tab>\n</Tabs>\n            </Card.Body>\n            <ListGroup>\n                    {vehicleDetail.map((vehicle) => (\n                        <ListGroup.Item>\n                            {vehicle.drivers.map((driver) => (\n                                <div>\n                                    {driver.injury_severity} {driver.age} {driver.sex}\n                                </div>\n                            ))}\n                            <div>\n                                {vehicle.traveling_on_street} {vehicle.traveling_direction} {vehicle.maneuver}\n                            </div>\n                            <div>\n                                {vehicle.color} {vehicle.year} {vehicle.make} {vehicle.model}\n                            </div>\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n        </Card>\n    );\n};"]},"metadata":{},"sourceType":"module"}