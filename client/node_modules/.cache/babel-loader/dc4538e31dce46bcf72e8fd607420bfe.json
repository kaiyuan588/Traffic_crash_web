{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Badge, Container, Row, Table, Col, Tab, Nav } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport \"./crash-card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrashCard({\n  crash\n}) {\n  _s();\n\n  const [vehicleDetail, setVehicleDetail] = useState([]);\n\n  const init = () => {\n    setVehicleDetail([]);\n    getVehiclesByReportNumber(crash.report_number).then(vehiclesData => {\n      if (vehiclesData) {\n        vehiclesData.forEach(v => {\n          v.color = colorMap(v.color);\n\n          if (v) {\n            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n              let temp = {\n                drivers: driverData\n              };\n              setVehicleDetail(vehicleDetail => [...vehicleDetail, { ...v,\n                ...temp\n              }]);\n            });\n          }\n        });\n      }\n    });\n  };\n\n  const colorMap = color => {\n    switch (color) {\n      case \"WHT\":\n        return \"White\";\n\n      case \"BLU\":\n        return \"Blue\";\n\n      case \"BLK\":\n        return \"White\";\n\n      case \"GRN\":\n        return \"Blue\";\n\n      case \"SIL\":\n        return \"White\";\n\n      default:\n        return \"Red\";\n    }\n  };\n\n  const injuryMap = injury => {\n    if (injury === \"Serious Injury\" || injury === \"Serious Injury\") {\n      return \"danger\";\n    } else if (injury === \"Injury\") {\n      return \"warning\";\n    } else {\n      console.log(injury === \"None\");\n      return \"success\";\n    }\n  };\n\n  const genderMap = sex => {\n    return sex === \"F\" ? \"Female\" : \"Male\";\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"crash-card\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            variant: injuryMap(crash.crash_severity),\n            className: \"float-right\",\n            children: crash.crash_severity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [crash.on_street, \" @ \", crash.city, \", \", crash.county]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: vehicleDetail.map(vehicle => /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Vehicle \", vehicle.vehicle_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [vehicle.color, \" \", vehicle.year, \" \", vehicle.make, \" \", vehicle.model]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Vehicle was \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: vehicle.maneuver\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 45\n            }, this), \" in \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: vehicle.traveling_on_street\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 74\n            }, this), \" heaing \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: vehicle.traveling_direction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 118\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), vehicle.drivers.map(driver => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Person \", driver.person_number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", genderMap(driver.sex), \", \", driver.age, \" years old \", /*#__PURE__*/_jsxDEV(Badge, {\n              variant: injuryMap(driver.injury_severity),\n              className: \"float-right\",\n              children: driver.injury_severity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 86\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrashCard, \"PEvZFG2vhXame44jSbVvvxAAtas=\");\n\n_c = CrashCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrashCard\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js"],"names":["React","useState","useEffect","Card","Badge","Container","Row","Table","Col","Tab","Nav","getVehiclesByReportNumber","getDriversByVehicleNumber","CrashCard","crash","vehicleDetail","setVehicleDetail","init","report_number","then","vehiclesData","forEach","v","color","colorMap","vehicle_number","driverData","temp","drivers","injuryMap","injury","console","log","genderMap","sex","crash_severity","on_street","city","county","map","vehicle","year","make","model","maneuver","traveling_on_street","traveling_direction","driver","person_number","age","injury_severity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Badge, Container, Row, Table, Col, Tab, Nav } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport \"./crash-card.css\";\n\nexport default function CrashCard({ crash }) {\n    const [vehicleDetail, setVehicleDetail] = useState([]);\n\n    const init = () => {\n        setVehicleDetail([]);\n        getVehiclesByReportNumber(crash.report_number)\n            .then(vehiclesData => {\n                if (vehiclesData) {\n                    vehiclesData.forEach(v => {\n                        v.color = colorMap(v.color);\n                        if (v) {\n                            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n                                let temp = {\n                                    drivers: driverData\n                                };\n                                setVehicleDetail(vehicleDetail => [...vehicleDetail, { ...v, ...temp }]);\n                            })\n                        }\n                    })\n                }\n            });\n    };\n\n    const colorMap = (color) => {\n        switch (color) {\n            case \"WHT\":\n                return \"White\";\n            case \"BLU\":\n                return \"Blue\";\n            case \"BLK\":\n                return \"White\";\n            case \"GRN\":\n                return \"Blue\";\n            case \"SIL\":\n                return \"White\";\n            default:\n                return \"Red\";\n        }\n    }\n\n    const injuryMap = (injury) => {\n        if (injury === \"Serious Injury\" || injury === \"Serious Injury\") {\n            return \"danger\"\n        } else if (injury === \"Injury\") {\n            return \"warning\";\n        } else {\n            console.log(injury === \"None\")\n            return \"success\";\n        }\n    }\n\n    const genderMap = (sex) => {\n        return sex === \"F\"? \"Female\": \"Male\";\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card className=\"crash-card\">\n            <Card.Header>\n                <Container>\n                    <Row>\n                        <Badge variant={injuryMap(crash.crash_severity)} className=\"float-right\">{crash.crash_severity}</Badge>\n                    </Row>\n                    <Row>\n                        {crash.on_street} @ {crash.city}, {crash.county}\n                    </Row>\n                </Container>\n            </Card.Header>\n\n            <Card.Body>\n                {vehicleDetail.map((vehicle) => (\n                    <Table striped bordered hover>\n                        <tr>\n                            <th>Vehicle {vehicle.vehicle_number}</th>\n                            <td>{vehicle.color} {vehicle.year} {vehicle.make} {vehicle.model}</td>\n                        </tr>\n                        <tr>\n                            <th>Description</th>\n                            <td>Vehicle was <b>{vehicle.maneuver}</b> in <b>{vehicle.traveling_on_street}</b> heaing <b>{vehicle.traveling_direction}</b></td>\n                        </tr>\n                        {vehicle.drivers.map((driver) => (\n                            <tr>\n                                <th>Person {driver.person_number}</th>\n                                <td> {genderMap(driver.sex)}, {driver.age} years old <Badge variant={injuryMap(driver.injury_severity)} className=\"float-right\">{driver.injury_severity}</Badge> </td>\n                            </tr>\n                        ))}\n                    </Table>\n\n                ))}\n            </Card.Body>\n        </Card>\n    );\n};\n\n"]},"metadata":{},"sourceType":"module"}