{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Badge } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrashCard({\n  crash\n}) {\n  _s();\n\n  const [vehicleDetail, setVehicleDetail] = useState(null);\n\n  const init = () => {\n    let arr = [];\n    getVehiclesByReportNumber(crash.report_number).then(vehiclesData => {\n      vehiclesData.forEach(v => {\n        getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n          arr.concat({ ...v,\n            ...driverData\n          });\n        });\n      });\n    });\n    setVehicleDetail(arr);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [crash.on_street, \" @ \", crash.city, \", \", crash.county, \" \", /*#__PURE__*/_jsxDEV(Badge, {\n        variant: \"secondary\",\n        children: crash.crash_severity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 75\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"With supporting text below as a natural lead-in to additional content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Go somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrashCard, \"2s/VYzA6Us5ZXUVpZWAmS8HDCnM=\");\n\n_c = CrashCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrashCard\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js"],"names":["React","useState","useEffect","Card","Button","Badge","getVehiclesByReportNumber","getDriversByVehicleNumber","CrashCard","crash","vehicleDetail","setVehicleDetail","init","arr","report_number","then","vehiclesData","forEach","v","vehicle_number","driverData","concat","on_street","city","county","crash_severity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,YAArE;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AACzC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMW,IAAI,GAAG,MAAM;AACf,QAAIC,GAAG,GAAG,EAAV;AACAP,IAAAA,yBAAyB,CAACG,KAAK,CAACK,aAAP,CAAzB,CACKC,IADL,CACUC,YAAY,IAAI;AAClBA,MAAAA,YAAY,CAACC,OAAb,CAAqBC,CAAC,IAAI;AACtBX,QAAAA,yBAAyB,CAACE,KAAK,CAACK,aAAP,EAAsBI,CAAC,CAACC,cAAxB,CAAzB,CAAiEJ,IAAjE,CAAsEK,UAAU,IAAI;AAChFP,UAAAA,GAAG,CAACQ,MAAJ,CAAW,EAAE,GAAGH,CAAL;AAAQ,eAAGE;AAAX,WAAX;AACH,SAFD;AAGH,OAJD;AAKH,KAPL;AAQAT,IAAAA,gBAAgB,CAACE,GAAD,CAAhB;AACH,GAXD;;AAaAX,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,iBAAcH,KAAK,CAACa,SAApB,SAAkCb,KAAK,CAACc,IAAxC,QAAgDd,KAAK,CAACe,MAAtD,oBAA8D,QAAC,KAAD;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA,kBAA4Bf,KAAK,CAACgB;AAAlC;AAAA;AAAA;AAAA;AAAA,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,IAAD,CAAM,IAAN;AAAA,8BAMI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GArCuBjB,S;;KAAAA,S;AAqCvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button, Badge } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\n\nexport default function CrashCard({ crash }) {\n    const [vehicleDetail, setVehicleDetail] = useState(null);\n\n    const init = () => {\n        let arr = [];\n        getVehiclesByReportNumber(crash.report_number)\n            .then(vehiclesData => {\n                vehiclesData.forEach(v => {\n                    getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n                        arr.concat({ ...v, ...driverData })\n                    })\n                })\n            });\n        setVehicleDetail(arr);\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card>\n            <Card.Header>{crash.on_street} @ {crash.city}, {crash.county} <Badge variant=\"secondary\">{crash.crash_severity}</Badge></Card.Header>\n\n            <Card.Body>\n                {/* {vehicleDetail.map((crash) => (\n          \n          \n        ))} */}\n\n                <Card.Text>\n                    With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n        </Card>\n    );\n};"]},"metadata":{},"sourceType":"module"}