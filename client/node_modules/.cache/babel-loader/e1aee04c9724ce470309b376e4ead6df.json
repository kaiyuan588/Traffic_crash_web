{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/area-chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Chart from 'react-apexcharts';\nimport { getCrashes } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Area() {\n  _s();\n\n  const countyTimeArray = [];\n\n  const init = () => {\n    const countyTimeMap = {};\n    getCrashes().then(data => {\n      data.forEach(element => {\n        let hour = element.crash_date_time.slice(11, 13);\n\n        if (!countyTimeMap[element.county]) {\n          countyTimeMap[element.county] = Array(6).fill(0);\n        }\n\n        if (hour - 1 < 4) {\n          countyTimeMap[element.county][0]++;\n        } else if (hour - 1 > 4 && hour - 1 < 8) {\n          countyTimeMap[element.county][1]++;\n        } else if (hour - 1 > 8 && hour - 1 < 12) {\n          countyTimeMap[element.county][2]++;\n        } else if (hour - 1 > 12 && hour - 1 < 16) {\n          countyTimeMap[element.county][3]++;\n        } else if (hour - 1 > 16 && hour - 1 < 20) {\n          countyTimeMap[element.county][4]++;\n        } else if (hour - 1 > 20 && hour - 1 < 24) {\n          countyTimeMap[element.county][5]++;\n        }\n      });\n\n      for (const [key, value] of Object.entries(countyTimeMap)) {\n        countyTimeArray.push({\n          name: key,\n          data: value\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const options = {\n    xaxis: {\n      categories: ['12AM - 04AM', '04AM - 08AM', '08AM - 12PM', '12PM - 4PM', '04PM - 08PM', '08PM - 12AM']\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"area\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: countyTimeArray,\n      type: \"area\",\n      width: \"700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Area, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Area;\n\nvar _c;\n\n$RefreshReg$(_c, \"Area\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/area-chart.js"],"names":["React","useEffect","Chart","getCrashes","Area","countyTimeArray","init","countyTimeMap","then","data","forEach","element","hour","crash_date_time","slice","county","Array","fill","key","value","Object","entries","push","name","options","xaxis","categories"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Chart from 'react-apexcharts'\nimport { getCrashes } from \"../api/api\";\n\nexport default function Area() {\n\n    const countyTimeArray = [];\n\n    const init = () => {\n        const countyTimeMap = {};\n        getCrashes().then(data => {\n            data.forEach(element => {\n                let hour = element.crash_date_time.slice(11, 13);\n                if (!countyTimeMap[element.county]) {\n                    countyTimeMap[element.county] = Array(6).fill(0);\n                } \n                 if (hour - 1 < 4) {\n                    countyTimeMap[element.county][0]++;\n                 } else if (hour - 1 > 4 && hour - 1 < 8) {\n                    countyTimeMap[element.county][1]++;\n                 } else if (hour - 1 > 8 && hour - 1 < 12) {\n                    countyTimeMap[element.county][2]++;\n                 } else if (hour - 1 > 12 && hour - 1 < 16) {\n                    countyTimeMap[element.county][3]++;\n                 } else if (hour - 1 > 16 && hour - 1 < 20) {\n                    countyTimeMap[element.county][4]++;\n                 } else if (hour - 1 > 20 && hour - 1 < 24) {\n                    countyTimeMap[element.county][5]++;\n                 }\n            });\n            for (const [key, value] of Object.entries(countyTimeMap)) {\n                countyTimeArray.push({\n                    name: key,\n                    data: value\n                })\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const options = {\n        xaxis: {\n            categories: ['12AM - 04AM', '04AM - 08AM', '08AM - 12PM', '12PM - 4PM', '04PM - 08PM', '08PM - 12AM']\n        }\n    }\n\n    return (\n        <div className=\"area\">\n            <Chart options={options} series={countyTimeArray} type=\"area\" width=\"700\" />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}