{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Badge, Container, Row } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrashCard({\n  crash\n}) {\n  _s();\n\n  // const [vehicleDetail, setVehicleDetail] = useState([]);\n  const vehicleDetail = [];\n\n  const init = () => {\n    getVehiclesByReportNumber(crash.report_number).then(vehiclesData => {\n      if (vehiclesData) {\n        vehiclesData.forEach(v => {\n          if (v) {\n            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n              // setVehicleDetail(arr => [...arr, { ...v, ...driverData }]);\n              vehicleDetail.push({ ...v,\n                ...driverData\n              });\n            });\n          }\n        });\n      }\n    });\n    console.log(vehicleDetail);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            variant: \"primary\",\n            children: crash.crash_severity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: vehicleDetail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), crash.on_street, \" @ \", crash.city, \", \", crash.county, /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"With supporting text below as a natural lead-in to additional content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrashCard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CrashCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrashCard\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js"],"names":["React","useState","useEffect","Card","Button","Badge","Container","Row","getVehiclesByReportNumber","getDriversByVehicleNumber","CrashCard","crash","vehicleDetail","init","report_number","then","vehiclesData","forEach","v","vehicle_number","driverData","push","console","log","crash_severity","on_street","city","county"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,GAAzC,QAAoD,iBAApD;AACA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,YAArE;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AACzC;AAEA,QAAMC,aAAa,GAAG,EAAtB;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACfL,IAAAA,yBAAyB,CAACG,KAAK,CAACG,aAAP,CAAzB,CACKC,IADL,CACUC,YAAY,IAAI;AAClB,UAAIA,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACC,OAAb,CAAqBC,CAAC,IAAI;AACtB,cAAIA,CAAJ,EAAO;AACHT,YAAAA,yBAAyB,CAACE,KAAK,CAACG,aAAP,EAAsBI,CAAC,CAACC,cAAxB,CAAzB,CAAiEJ,IAAjE,CAAsEK,UAAU,IAAI;AAChF;AACAR,cAAAA,aAAa,CAACS,IAAd,CAAmB,EAAE,GAAGH,CAAL;AAAQ,mBAAGE;AAAX,eAAnB;AACH,aAHD;AAIH;AACJ,SAPD;AAQH;AACJ,KAZL;AAaAE,IAAAA,OAAO,CAACC,GAAR,CAAYX,aAAZ;AACH,GAfD;;AAiBAV,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,6BACI,QAAC,SAAD;AAAA,gCACI,QAAC,GAAD;AAAA,iCACI,QAAC,KAAD;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA,sBAA0BF,KAAK,CAACa;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAA,oBACKZ;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAWKD,KAAK,CAACc,SAXX,SAWyBd,KAAK,CAACe,IAX/B,QAWuCf,KAAK,CAACgB,MAX7C,eAYI,QAAC,IAAD,CAAM,IAAN;AAAA,6BAMI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAnDuBjB,S;;KAAAA,S;AAmDvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button, Badge, Container, Row } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\n\nexport default function CrashCard({ crash }) {\n    // const [vehicleDetail, setVehicleDetail] = useState([]);\n\n    const vehicleDetail = [];\n\n    const init = () => {\n        getVehiclesByReportNumber(crash.report_number)\n            .then(vehiclesData => {\n                if (vehiclesData) {\n                    vehiclesData.forEach(v => {\n                        if (v) {\n                            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n                                // setVehicleDetail(arr => [...arr, { ...v, ...driverData }]);\n                                vehicleDetail.push({ ...v, ...driverData })\n                            })\n                        }\n                    })\n                }\n            });\n        console.log(vehicleDetail)\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card>\n            <Card.Header>\n                <Container>\n                    <Row>\n                        <Badge variant=\"primary\">{crash.crash_severity}</Badge>\n                    </Row>\n                    <Row>\n                        {vehicleDetail}\n                    </Row>\n                </Container>\n            </Card.Header>\n            {crash.on_street} @ {crash.city}, {crash.county}\n            <Card.Body>\n                {/* {vehicleDetail.map((crash) => (\n          \n          \n        ))} */}\n\n                <Card.Text>\n                    With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n};"]},"metadata":{},"sourceType":"module"}