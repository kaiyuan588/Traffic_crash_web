{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CrashCard({\n  crash\n}) {\n  _s();\n\n  const [vehicles, setVehicles] = useState(null);\n\n  const init = () => {\n    getVehiclesByReportNumber(crash.report_number).then(vehicleData => {\n      let vehicles = vehicleData;\n      getDriversByVehicleNumber(crash.report_number, vehicleData.vehicle_number).then(driverData => {\n        vehicles = [...vehicleData, driverData];\n        setVehicles({\n          vehicles: vehicles\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [crash.crash_severity, \"| \", crash.on_street, \" @ \", crash.city, \", \", crash.county]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [vehicles.map(vehicle => {\n        /*#__PURE__*/\n        _jsxDEV(Card.Title, {\n          children: vehicle.traveling_direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Card.Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: \"With supporting text below as a natural lead-in to additional content.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Go somewhere\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CrashCard, \"EJvBnR98ss4280IPnvkahwHfiW0=\");\n\n_c = CrashCard;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrashCard\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/crash-card.js"],"names":["React","useState","useEffect","Card","Button","getVehiclesByReportNumber","getDriversByVehicleNumber","CrashCard","crash","vehicles","setVehicles","init","report_number","then","vehicleData","vehicle_number","driverData","crash_severity","on_street","city","county","map","vehicle","traveling_direction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,SAASC,yBAAT,EAAoCC,yBAApC,QAAqE,YAArE;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA8B;AAAA;;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAMU,IAAI,GAAG,MAAM;AACfN,IAAAA,yBAAyB,CAACG,KAAK,CAACI,aAAP,CAAzB,CAA+CC,IAA/C,CAAoDC,WAAW,IAAI;AAC/D,UAAIL,QAAQ,GAAGK,WAAf;AACAR,MAAAA,yBAAyB,CAACE,KAAK,CAACI,aAAP,EAAsBE,WAAW,CAACC,cAAlC,CAAzB,CAA2EF,IAA3E,CAAgFG,UAAU,IAAI;AAC1FP,QAAAA,QAAQ,GAAG,CAAC,GAAGK,WAAJ,EAAiBE,UAAjB,CAAX;AACAN,QAAAA,WAAW,CAAC;AACRD,UAAAA,QAAQ,EAAEA;AADF,SAAD,CAAX;AAGH,OALD;AAMH,KARD;AASH,GAVD;;AAYAP,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,IAAD;AAAA,4BACI,QAAC,IAAD,CAAM,MAAN;AAAA,iBAAcH,KAAK,CAACS,cAApB,QAAsCT,KAAK,CAACU,SAA5C,SAA0DV,KAAK,CAACW,IAAhE,QAAwEX,KAAK,CAACY,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,iBACKX,QAAQ,CAACY,GAAT,CAAcC,OAAD,IAAa;AACvB;AAAA,gBAAC,IAAD,CAAM,KAAN;AAAA,oBAAaA,OAAO,CAACC;AAArB;AAAA;AAAA;AAAA;AAAA;AACH,OAFA,CADL,eAII,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAjCuBhB,S;;KAAAA,S;AAiCvB","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Button } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\n\nexport default function CrashCard({ crash }) {\n    const [vehicles, setVehicles] = useState(null);\n    const init = () => {\n        getVehiclesByReportNumber(crash.report_number).then(vehicleData => {\n            let vehicles = vehicleData;\n            getDriversByVehicleNumber(crash.report_number, vehicleData.vehicle_number).then(driverData => {\n                vehicles = [...vehicleData, driverData];\n                setVehicles({\n                    vehicles: vehicles\n                });\n            })\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card>\n            <Card.Header>{crash.crash_severity}| {crash.on_street} @ {crash.city}, {crash.county}</Card.Header>\n            <Card.Body>\n                {vehicles.map((vehicle) => {\n                    <Card.Title>{vehicle.traveling_direction}</Card.Title>\n                })}\n                <Card.Title></Card.Title>\n                <Card.Text>\n                    With supporting text below as a natural lead-in to additional content.\n    </Card.Text>\n                <Button variant=\"primary\">Go somewhere</Button>\n            </Card.Body>\n        </Card>\n    );\n};"]},"metadata":{},"sourceType":"module"}