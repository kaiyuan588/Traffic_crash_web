{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/map/map.component.js\";\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, TrafficLayer } from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport { getCrashes } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nclass MapExample extends Component {\n  constructor(props) {\n    super(props);\n    this.map = /*#__PURE__*/React.createRef();\n    this.crashList = [];\n  }\n\n  componentDidMount() {\n    getCrashes().then(data => {\n      this.crashList = data;\n    });\n  }\n\n  render() {\n    const libraries = [\"places\"];\n    const mapContainerStyle = {\n      height: \"60vh\",\n      width: \"70vw\"\n    };\n    const options = {\n      styles: mapStyles,\n      disableDefaultUI: true,\n      zoomControl: true\n    };\n    const center = {\n      lat: 28,\n      lng: -84\n    };\n    const googleMapsApiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n    const GoogleMapExample = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      id: \"map\",\n      mapContainerStyle: mapContainerStyle,\n      zoom: 7.2,\n      options: options,\n      ref: map => {\n        this.map = map;\n      },\n      onIdle: props.onMapIdle,\n      defaultCenter: center,\n      defaultZoom: 3,\n      children: this.crashList.map(crash => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: crash.latitude,\n          lng: crash.longitude\n        } // onClick={() => {\n        //     setSelected(crash);\n        // }}\n\n      }, crash.report_number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GoogleMapExample, {\n        onMapIdle: () => {\n          let ne = this.map.getBounds().getNorthEast();\n          let sw = this.map.getBounds().getSouthWest();\n          console.log(ne.lat() + \";\" + ne.lng());\n          console.log(sw.lat() + \";\" + sw.lng());\n        },\n        googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}`,\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 39\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MapExample;","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/map/map.component.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","TrafficLayer","mapStyles","getCrashes","require","config","MapExample","constructor","props","map","createRef","crashList","componentDidMount","then","data","render","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","GoogleMapExample","onMapIdle","crash","latitude","longitude","report_number","ne","getBounds","getNorthEast","sw","getSouthWest","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, TrafficLayer } from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport { getCrashes } from \"../api/api\";\n\nrequire('dotenv').config();\n\nclass MapExample extends Component {\n    constructor(props) {\n        super(props);\n        this.map = React.createRef();\n        this.crashList = [];\n    }\n\n    componentDidMount() {\n        getCrashes().then(data => {\n            this.crashList = data;\n        });\n    }\n\n    render() {\n        const libraries = [\"places\"];\n        const mapContainerStyle = {\n            height: \"60vh\",\n            width: \"70vw\",\n        };\n        const options = {\n            styles: mapStyles,\n            disableDefaultUI: true,\n            zoomControl: true,\n        };\n        const center = {\n            lat: 28,\n            lng: -84,\n        };\n        const googleMapsApiKey = process.env.REACT_APP_GOOGLE_API_KEY;\n\n        const GoogleMapExample = withScriptjs(\n            withGoogleMap(props => (\n                <GoogleMap\n                    id=\"map\"\n                    mapContainerStyle={mapContainerStyle}\n                    zoom={7.2}\n                    options={options}\n                    ref={map => {\n                        this.map = map;\n                    }}\n                    onIdle={props.onMapIdle}\n                    defaultCenter={center}\n                    defaultZoom={3}\n                >\n                    {this.crashList.map((crash) => (\n                        <Marker\n                            key={crash.report_number}\n                            position={{ lat: crash.latitude, lng: crash.longitude }}\n                            // onClick={() => {\n                            //     setSelected(crash);\n                            // }}\n                        />\n                    ))}\n                </GoogleMap>\n            ))\n        );\n        return (\n            <div>\n                <GoogleMapExample\n                    onMapIdle={() => {\n                        let ne = this.map.getBounds().getNorthEast();\n                        let sw = this.map.getBounds().getSouthWest();\n                        console.log(ne.lat() + \";\" + ne.lng());\n                        console.log(sw.lat() + \";\" + sw.lng());\n                    }}\n                    googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}`}\n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{ height: `400px` }} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                />\n            </div>\n        );\n    }\n}\n\nexport default MapExample;\n"]},"metadata":{},"sourceType":"module"}