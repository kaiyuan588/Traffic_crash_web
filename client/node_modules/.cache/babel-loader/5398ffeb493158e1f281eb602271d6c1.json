{"ast":null,"code":"var _jsxFileName = \"/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/pie-chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from 'react-apexcharts';\nimport { getCrashes } from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Bar() {\n  _s();\n\n  const countyTimeMap = {};\n\n  const init = () => {\n    getCrashes().then(data => {\n      data.forEach(element => {\n        let hour = element.crash_date_time.slice(11, 13);\n\n        if (!countyTimeMap[element.county]) {\n          countyTimeMap[element.county] = Array(24).fill(0);\n        }\n\n        countyTimeMap[element.county][hour - 1]++;\n      });\n\n      for (const [key, value] of Object.entries(countyTimeMap)) {\n        console.log(`${key}: ${value}`);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const options = {\n    xaxis: {\n      categories: ['12AM', '01AM', '02AM', '03AM', '04AM', '05AM', '06AM', '07AM', '08AM', '09AM', '10AM', '11AM', '12PM', '01PM', '02AM', '03AM', '04PM', '05AM', '06AM', '07PM', '08AM', '09AM', '10PM', '11AM']\n    }\n  };\n  const series = [{\n    name: 'series-1',\n    data: [30, 40, 25, 50, 49, 21, 70, 51]\n  }, {\n    name: 'series-2',\n    data: [23, 12, 54, 61, 32, 56, 81, 19]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"area\",\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      width: \"1000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Bar, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Bar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bar\");","map":{"version":3,"sources":["/Users/sihanzhao/Desktop/uf-traffic/client/src/components/chart/pie-chart.js"],"names":["React","useState","useEffect","Chart","getCrashes","Bar","countyTimeMap","init","then","data","forEach","element","hour","crash_date_time","slice","county","Array","fill","key","value","Object","entries","console","log","options","xaxis","categories","series","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,QAAMC,aAAa,GAAG,EAAtB;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACfH,IAAAA,UAAU,GAAGI,IAAb,CAAkBC,IAAI,IAAI;AACtBA,MAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AACpB,YAAIC,IAAI,GAAGD,OAAO,CAACE,eAAR,CAAwBC,KAAxB,CAA8B,EAA9B,EAAkC,EAAlC,CAAX;;AACA,YAAI,CAACR,aAAa,CAACK,OAAO,CAACI,MAAT,CAAlB,EAAoC;AAChCT,UAAAA,aAAa,CAACK,OAAO,CAACI,MAAT,CAAb,GAAgCC,KAAK,CAAC,EAAD,CAAL,CAAUC,IAAV,CAAe,CAAf,CAAhC;AACH;;AACDX,QAAAA,aAAa,CAACK,OAAO,CAACI,MAAT,CAAb,CAA8BH,IAAI,GAAG,CAArC;AACH,OAND;;AAOA,WAAK,MAAM,CAACM,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAef,aAAf,CAA3B,EAA0D;AAEtDgB,QAAAA,OAAO,CAACC,GAAR,CAAa,GAAEL,GAAI,KAAIC,KAAM,EAA7B;AACD;AACN,KAZD;AAaH,GAdD;;AAgBAjB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,IAAI;AACP,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMiB,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,EAAiF,MAAjF,EAAyF,MAAzF,EAAiG,MAAjG,EAAyG,MAAzG,EAAiH,MAAjH,EAAyH,MAAzH,EAAiI,MAAjI,EAAyI,MAAzI,EAAiJ,MAAjJ,EAAyJ,MAAzJ,EAAiK,MAAjK,EAAyK,MAAzK,EAAiL,MAAjL,EAAyL,MAAzL;AADT;AADK,GAAhB;AAKA,QAAMC,MAAM,GAAG,CAAC;AACZC,IAAAA,IAAI,EAAE,UADM;AAEZnB,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAFM,GAAD,EAGZ;AACCmB,IAAAA,IAAI,EAAE,UADP;AAECnB,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B;AAFP,GAHY,CAAf;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEe,OAAhB;AAAyB,MAAA,MAAM,EAAEG,MAAjC;AAAyC,MAAA,IAAI,EAAC,MAA9C;AAAqD,MAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1CuBtB,G;;KAAAA,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from 'react-apexcharts'\nimport { getCrashes } from \"../api/api\";\n\nexport default function Bar() {\n\n    const countyTimeMap = {};\n\n    const init = () => {\n        getCrashes().then(data => {\n            data.forEach(element => {\n                let hour = element.crash_date_time.slice(11, 13);\n                if (!countyTimeMap[element.county]) {\n                    countyTimeMap[element.county] = Array(24).fill(0);\n                }\n                countyTimeMap[element.county][hour - 1]++;\n            });\n            for (const [key, value] of Object.entries(countyTimeMap)) {\n                \n                console.log(`${key}: ${value}`);\n              }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const options = {\n        xaxis: {\n            categories: ['12AM', '01AM', '02AM', '03AM', '04AM', '05AM', '06AM', '07AM', '08AM', '09AM', '10AM', '11AM', '12PM', '01PM', '02AM', '03AM', '04PM', '05AM', '06AM', '07PM', '08AM', '09AM', '10PM', '11AM']\n        }\n    }\n    const series = [{\n        name: 'series-1',\n        data: [30, 40, 25, 50, 49, 21, 70, 51]\n    }, {\n        name: 'series-2',\n        data: [23, 12, 54, 61, 32, 56, 81, 19]\n    }]\n\n    return (\n        <div className=\"area\">\n            <Chart options={options} series={series} type=\"area\" width=\"1000\" />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}