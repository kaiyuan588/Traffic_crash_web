[{"/Users/kaiyuanzhao/Traffic_crash_web/client/src/index.js":"1","/Users/kaiyuanzhao/Traffic_crash_web/client/src/App.js":"2","/Users/kaiyuanzhao/Traffic_crash_web/client/src/reportWebVitals.js":"3","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/crash-list.js":"4","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/map/map.js":"5","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/area-chart.js":"6","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/header.js":"7","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/crash-card.js":"8","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/map/mapStyles.js":"9","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/api/api.js":"10"},{"size":594,"mtime":1623038123000,"results":"11","hashOfConfig":"12"},{"size":571,"mtime":1623038186000,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1622871067000,"results":"14","hashOfConfig":"12"},{"size":964,"mtime":1622965274000,"results":"15","hashOfConfig":"12"},{"size":2187,"mtime":1623035695000,"results":"16","hashOfConfig":"12"},{"size":1921,"mtime":1623035728000,"results":"17","hashOfConfig":"12"},{"size":389,"mtime":1623022390000,"results":"18","hashOfConfig":"12"},{"size":4192,"mtime":1623021362000,"results":"19","hashOfConfig":"12"},{"size":2504,"mtime":1622878387000,"results":"20","hashOfConfig":"12"},{"size":895,"mtime":1622948141000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1njfd8q",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaiyuanzhao/Traffic_crash_web/client/src/index.js",[],"/Users/kaiyuanzhao/Traffic_crash_web/client/src/App.js",[],"/Users/kaiyuanzhao/Traffic_crash_web/client/src/reportWebVitals.js",[],"/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/crash-list.js",["46","47"],"import React, { useState, useEffect } from \"react\";\nimport { getCrashes } from \"../api/api\";\nimport CrashCard from \"./crash-card\";\n\nexport default function CrashList() {\n    const [values, setValues] = useState({\n        crashList: [],\n        error: \"\",\n    });\n    const { crashList, error } = values;\n\n    const init = () => {\n        getCrashes().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    crashList: data\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <div>\n            <h5>\n                {crashList.length} incident found in Florida\n            </h5>\n            {crashList.map((crash) => (\n                <CrashCard\n                    crash={crash}\n                />\n            ))}\n        </div>\n    );\n};\n\n\n","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/map/map.js",["48","49"],"import React, { useState, useEffect } from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n  TrafficLayer,\n} from \"@react-google-maps/api\";\nimport mapStyles from \"./mapStyles\";\nimport { getCrashes } from \"../api/api\";\nimport CrashCard from \"../chart/crash-card\";\n\nrequire('dotenv').config();\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"58vh\",\n  width: \"63vw\",\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true,\n};\nconst center = {\n  lat: 28,\n  lng: -84,\n};\n\nexport default function Map() {\n\n  const [values, setValues] = useState({\n    crashList: [],\n    error: \"\",\n  });\n  const [selected, setSelected] = useState(null);\n\n  const { crashList, error } = values;\n\n  const init = () => {\n    getCrashes().then(data => {\n      if (data.error) {\n        setValues({ ...values, error: data.error });\n      } else {\n        setValues({\n          ...values,\n          crashList: data\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries,\n  });\n\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  return (\n    <div>\n      <GoogleMap\n        id=\"map\"\n        mapContainerStyle={mapContainerStyle}\n        zoom={7}\n        center={center}\n        options={options}\n      >\n        <TrafficLayer autoUpdate />\n        {crashList.map((crash) => (\n          <Marker\n            key={crash.report_number}\n            position={{ lat: crash.latitude, lng: crash.longitude }}\n            onClick={() => {\n              setSelected(crash);\n            }}\n            icon={{\n              url: \"../test.svg\",\n              scaledSize: new window.google.maps.Size(18,18)\n            }}\n          />\n        ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.latitude, lng: selected.longitude }}\n            onCloseClick={() => {\n              setSelected(null);\n            }}\n          >\n            <CrashCard crash={selected} />\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/area-chart.js",[],"/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/header.js",[],"/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/chart/crash-card.js",["50"],"import React, { useState, useEffect } from \"react\";\nimport { Card, Badge, Container, Row, Table, Col } from 'react-bootstrap';\nimport { getVehiclesByReportNumber, getDriversByVehicleNumber } from \"../api/api\";\nimport \"./crash-card.css\";\nimport TimeAgo from 'javascript-time-ago'\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.addDefaultLocale(en)\n\nexport default function CrashCard({ crash }) {\n    const [vehicleDetail, setVehicleDetail] = useState([]);\n\n    const init = () => {\n        setVehicleDetail([]);\n        getVehiclesByReportNumber(crash.report_number)\n            .then(vehiclesData => {\n                if (vehiclesData) {\n                    vehiclesData.forEach(v => {\n                        v.color = colorMap(v.color);\n                        if (v) {\n                            getDriversByVehicleNumber(crash.report_number, v.vehicle_number).then(driverData => {\n                                let temp = {\n                                    drivers: driverData\n                                };\n                                setVehicleDetail(vehicleDetail => [...vehicleDetail, { ...v, ...temp }]);\n                            })\n                        }\n                    })\n                }\n            });\n    };\n\n    const colorMap = (color) => {\n        switch (color) {\n            case \"WHT\":\n                return \"White\";\n            case \"BLU\":\n                return \"Blue\";\n            case \"BLK\":\n                return \"White\";\n            case \"GRN\":\n                return \"Blue\";\n            case \"SIL\":\n                return \"White\";\n            default:\n                return \"Red\";\n        }\n    }\n\n    const injuryMap = (injury) => {\n        if (injury === \"Fatal\" || injury === \"Serious Injury\") {\n            return \"danger\"\n        } else if (injury === \"Injury\") {\n            return \"warning\";\n        } else {\n            return \"success\";\n        }\n    }\n\n    const genderMap = (sex) => {\n        return sex === \"F\" ? \"Female\" : \"Male\";\n    }\n\n    const timeAgo = (time) => {\n        const timeAgo = new TimeAgo('en-US')\n        const timeStamp = new Date(time).getTime();\n        return timeAgo.format(Date.now() - (timeStamp - Date.now()))\n    }\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    return (\n        <Card className=\"crash-card\">\n            <Card.Header className=\"crash-card-header\">\n                <Container>\n                    <Row>\n                        <Badge variant={injuryMap(crash.crash_severity)} className=\"float-right\">{crash.crash_severity}</Badge>\n                    </Row>\n                    <Row>\n                        <Col xs={9} className=\"crash-card-col\">{crash.on_street} @ {crash.city}, {crash.county} </Col>\n                        <Col className=\"crash-card-col text-right\">{timeAgo(crash.crash_date_time)}</Col>\n                    </Row>\n                </Container>\n            </Card.Header>\n\n            <Card.Body>\n                {vehicleDetail.map((vehicle) => (\n                    <Table striped bordered hover>\n                        <tbody>\n                            <tr>\n                                <th>Vehicle {vehicle.vehicle_number}</th>\n                                <td>{vehicle.color} {vehicle.year} {vehicle.make} {vehicle.model}</td>\n                            </tr>\n                            <tr>\n                                <th>Description</th>\n                                <td>Vehicle was <b>{vehicle.maneuver}</b> in <b>{vehicle.traveling_on_street}</b> heaing <b>{vehicle.traveling_direction}</b></td>\n                            </tr>\n                            {vehicle.drivers.map((driver) => (\n                                <tr>\n                                    <th>Person {driver.person_number}</th>\n                                    <td> {genderMap(driver.sex)}, {driver.age} years old <Badge variant={injuryMap(driver.injury_severity)} className=\"float-right\">{driver.injury_severity}</Badge> </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n\n                ))}\n            </Card.Body>\n        </Card>\n    );\n};\n\n","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/map/mapStyles.js",["51"],"export default [\n  {\n    featureType: \"all\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        weight: \"2.00\",\n      },\n    ],\n  },\n  {\n    featureType: \"all\",\n    elementType: \"geometry.stroke\",\n    stylers: [\n      {\n        color: \"#9c9c9c\",\n      },\n    ],\n  },\n  {\n    featureType: \"all\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#f2f2f2\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        saturation: -100,\n      },\n      {\n        lightness: 45,\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#eeeeee\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#7b7b7b\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#46bcec\",\n      },\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        color: \"#c8d7d4\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#070707\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\",\n      },\n    ],\n  },\n];\n","/Users/kaiyuanzhao/Traffic_crash_web/client/src/components/api/api.js",[],{"ruleId":"52","severity":1,"message":"53","line":10,"column":24,"nodeType":"54","messageId":"55","endLine":10,"endColumn":29},{"ruleId":"56","severity":1,"message":"57","line":27,"column":8,"nodeType":"58","endLine":27,"endColumn":10,"suggestions":"59"},{"ruleId":"52","severity":1,"message":"53","line":38,"column":22,"nodeType":"54","messageId":"55","endLine":38,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":55,"column":6,"nodeType":"58","endLine":55,"endColumn":8,"suggestions":"60"},{"ruleId":"56","severity":1,"message":"57","line":72,"column":8,"nodeType":"58","endLine":72,"endColumn":10,"suggestions":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":1,"nodeType":"64","endLine":170,"endColumn":3},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["65"],["66"],["67"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"68","fix":"69"},{"desc":"68","fix":"70"},{"desc":"68","fix":"71"},"Update the dependencies array to be: [init]",{"range":"72","text":"73"},{"range":"74","text":"73"},{"range":"75","text":"73"},[672,674],"[init]",[1036,1038],[2268,2270]]